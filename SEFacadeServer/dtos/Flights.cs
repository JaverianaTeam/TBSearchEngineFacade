// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: flights.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Flights {

  /// <summary>Holder for reflection information generated from flights.proto</summary>
  public static partial class FlightsReflection {

    #region Descriptor
    /// <summary>File descriptor for flights.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FlightsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1mbGlnaHRzLnByb3RvEgdmbGlnaHRzIjAKBERhdGUSCwoDZGF5GAEgASgF",
            "Eg0KBW1vbnRoGAIgASgFEgwKBHllYXIYAyABKAUipgEKBkZsaWdodBIlCg5k",
            "ZXBhcnRpbmdfZGF0ZRgBIAEoCzINLmZsaWdodHMuRGF0ZRIkCg1hcnJpdmlu",
            "Z19kYXRlGAIgASgLMg0uZmxpZ2h0cy5EYXRlEhYKDmRlcGFydGluZ19jaXR5",
            "GAMgASgJEhUKDWFycml2aW5nX2NpdHkYBCABKAkSEQoJcGFzc2FuZ2VyGAUg",
            "ASgFEg0KBXByaWNlGAYgASgBImsKE1NlYXJjaEZsaWdodFJlcXVlc3QSFgoO",
            "ZGVwYXJ0aW5nX2NpdHkYASABKAkSFQoNYXJyaXZpbmdfY2l0eRgCIAEoCRIl",
            "Cg5kZXBhcnRpbmdfZGF0ZRgDIAEoCzINLmZsaWdodHMuRGF0ZSI4ChRTZWFy",
            "Y2hGbGlnaHRSZXNwb25zZRIgCgdmbGlnaHRzGAEgAygLMg8uZmxpZ2h0cy5G",
            "bGlnaHQyZgoTU2VhcmNoRmxpZ2h0U2VydmljZRJPCgxTZWFyY2hGbGlnaHQS",
            "HC5mbGlnaHRzLlNlYXJjaEZsaWdodFJlcXVlc3QaHS5mbGlnaHRzLlNlYXJj",
            "aEZsaWdodFJlc3BvbnNlIgAwAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Flights.Date), global::Flights.Date.Parser, new[]{ "Day", "Month", "Year" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Flights.Flight), global::Flights.Flight.Parser, new[]{ "DepartingDate", "ArrivingDate", "DepartingCity", "ArrivingCity", "Passanger", "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Flights.SearchFlightRequest), global::Flights.SearchFlightRequest.Parser, new[]{ "DepartingCity", "ArrivingCity", "DepartingDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Flights.SearchFlightResponse), global::Flights.SearchFlightResponse.Parser, new[]{ "Flights" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Date : pb::IMessage<Date> {
    private static readonly pb::MessageParser<Date> _parser = new pb::MessageParser<Date>(() => new Date());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Date> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Flights.FlightsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Date() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Date(Date other) : this() {
      day_ = other.day_;
      month_ = other.month_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Date Clone() {
      return new Date(this);
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 1;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private int month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Month {
      get { return month_; }
      set {
        month_ = value;
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 3;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { return year_; }
      set {
        year_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Date);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Date other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Day != other.Day) return false;
      if (Month != other.Month) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Day != 0) hash ^= Day.GetHashCode();
      if (Month != 0) hash ^= Month.GetHashCode();
      if (Year != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Day != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Day);
      }
      if (Month != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Month);
      }
      if (Year != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (Month != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
      }
      if (Year != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Date other) {
      if (other == null) {
        return;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
      if (other.Month != 0) {
        Month = other.Month;
      }
      if (other.Year != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Day = input.ReadInt32();
            break;
          }
          case 16: {
            Month = input.ReadInt32();
            break;
          }
          case 24: {
            Year = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Flight : pb::IMessage<Flight> {
    private static readonly pb::MessageParser<Flight> _parser = new pb::MessageParser<Flight>(() => new Flight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Flight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Flights.FlightsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flight(Flight other) : this() {
      departingDate_ = other.departingDate_ != null ? other.departingDate_.Clone() : null;
      arrivingDate_ = other.arrivingDate_ != null ? other.arrivingDate_.Clone() : null;
      departingCity_ = other.departingCity_;
      arrivingCity_ = other.arrivingCity_;
      passanger_ = other.passanger_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flight Clone() {
      return new Flight(this);
    }

    /// <summary>Field number for the "departing_date" field.</summary>
    public const int DepartingDateFieldNumber = 1;
    private global::Flights.Date departingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Flights.Date DepartingDate {
      get { return departingDate_; }
      set {
        departingDate_ = value;
      }
    }

    /// <summary>Field number for the "arriving_date" field.</summary>
    public const int ArrivingDateFieldNumber = 2;
    private global::Flights.Date arrivingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Flights.Date ArrivingDate {
      get { return arrivingDate_; }
      set {
        arrivingDate_ = value;
      }
    }

    /// <summary>Field number for the "departing_city" field.</summary>
    public const int DepartingCityFieldNumber = 3;
    private string departingCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepartingCity {
      get { return departingCity_; }
      set {
        departingCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arriving_city" field.</summary>
    public const int ArrivingCityFieldNumber = 4;
    private string arrivingCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArrivingCity {
      get { return arrivingCity_; }
      set {
        arrivingCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passanger" field.</summary>
    public const int PassangerFieldNumber = 5;
    private int passanger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passanger {
      get { return passanger_; }
      set {
        passanger_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 6;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Flight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Flight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DepartingDate, other.DepartingDate)) return false;
      if (!object.Equals(ArrivingDate, other.ArrivingDate)) return false;
      if (DepartingCity != other.DepartingCity) return false;
      if (ArrivingCity != other.ArrivingCity) return false;
      if (Passanger != other.Passanger) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (departingDate_ != null) hash ^= DepartingDate.GetHashCode();
      if (arrivingDate_ != null) hash ^= ArrivingDate.GetHashCode();
      if (DepartingCity.Length != 0) hash ^= DepartingCity.GetHashCode();
      if (ArrivingCity.Length != 0) hash ^= ArrivingCity.GetHashCode();
      if (Passanger != 0) hash ^= Passanger.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (departingDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DepartingDate);
      }
      if (arrivingDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrivingDate);
      }
      if (DepartingCity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DepartingCity);
      }
      if (ArrivingCity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ArrivingCity);
      }
      if (Passanger != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Passanger);
      }
      if (Price != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (departingDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartingDate);
      }
      if (arrivingDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrivingDate);
      }
      if (DepartingCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepartingCity);
      }
      if (ArrivingCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArrivingCity);
      }
      if (Passanger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Passanger);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Flight other) {
      if (other == null) {
        return;
      }
      if (other.departingDate_ != null) {
        if (departingDate_ == null) {
          DepartingDate = new global::Flights.Date();
        }
        DepartingDate.MergeFrom(other.DepartingDate);
      }
      if (other.arrivingDate_ != null) {
        if (arrivingDate_ == null) {
          ArrivingDate = new global::Flights.Date();
        }
        ArrivingDate.MergeFrom(other.ArrivingDate);
      }
      if (other.DepartingCity.Length != 0) {
        DepartingCity = other.DepartingCity;
      }
      if (other.ArrivingCity.Length != 0) {
        ArrivingCity = other.ArrivingCity;
      }
      if (other.Passanger != 0) {
        Passanger = other.Passanger;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (departingDate_ == null) {
              DepartingDate = new global::Flights.Date();
            }
            input.ReadMessage(DepartingDate);
            break;
          }
          case 18: {
            if (arrivingDate_ == null) {
              ArrivingDate = new global::Flights.Date();
            }
            input.ReadMessage(ArrivingDate);
            break;
          }
          case 26: {
            DepartingCity = input.ReadString();
            break;
          }
          case 34: {
            ArrivingCity = input.ReadString();
            break;
          }
          case 40: {
            Passanger = input.ReadInt32();
            break;
          }
          case 49: {
            Price = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchFlightRequest : pb::IMessage<SearchFlightRequest> {
    private static readonly pb::MessageParser<SearchFlightRequest> _parser = new pb::MessageParser<SearchFlightRequest>(() => new SearchFlightRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchFlightRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Flights.FlightsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightRequest(SearchFlightRequest other) : this() {
      departingCity_ = other.departingCity_;
      arrivingCity_ = other.arrivingCity_;
      departingDate_ = other.departingDate_ != null ? other.departingDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightRequest Clone() {
      return new SearchFlightRequest(this);
    }

    /// <summary>Field number for the "departing_city" field.</summary>
    public const int DepartingCityFieldNumber = 1;
    private string departingCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepartingCity {
      get { return departingCity_; }
      set {
        departingCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arriving_city" field.</summary>
    public const int ArrivingCityFieldNumber = 2;
    private string arrivingCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArrivingCity {
      get { return arrivingCity_; }
      set {
        arrivingCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "departing_date" field.</summary>
    public const int DepartingDateFieldNumber = 3;
    private global::Flights.Date departingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Flights.Date DepartingDate {
      get { return departingDate_; }
      set {
        departingDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchFlightRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchFlightRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepartingCity != other.DepartingCity) return false;
      if (ArrivingCity != other.ArrivingCity) return false;
      if (!object.Equals(DepartingDate, other.DepartingDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepartingCity.Length != 0) hash ^= DepartingCity.GetHashCode();
      if (ArrivingCity.Length != 0) hash ^= ArrivingCity.GetHashCode();
      if (departingDate_ != null) hash ^= DepartingDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepartingCity.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DepartingCity);
      }
      if (ArrivingCity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ArrivingCity);
      }
      if (departingDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DepartingDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepartingCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepartingCity);
      }
      if (ArrivingCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArrivingCity);
      }
      if (departingDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartingDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchFlightRequest other) {
      if (other == null) {
        return;
      }
      if (other.DepartingCity.Length != 0) {
        DepartingCity = other.DepartingCity;
      }
      if (other.ArrivingCity.Length != 0) {
        ArrivingCity = other.ArrivingCity;
      }
      if (other.departingDate_ != null) {
        if (departingDate_ == null) {
          DepartingDate = new global::Flights.Date();
        }
        DepartingDate.MergeFrom(other.DepartingDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DepartingCity = input.ReadString();
            break;
          }
          case 18: {
            ArrivingCity = input.ReadString();
            break;
          }
          case 26: {
            if (departingDate_ == null) {
              DepartingDate = new global::Flights.Date();
            }
            input.ReadMessage(DepartingDate);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchFlightResponse : pb::IMessage<SearchFlightResponse> {
    private static readonly pb::MessageParser<SearchFlightResponse> _parser = new pb::MessageParser<SearchFlightResponse>(() => new SearchFlightResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchFlightResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Flights.FlightsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightResponse(SearchFlightResponse other) : this() {
      flights_ = other.flights_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchFlightResponse Clone() {
      return new SearchFlightResponse(this);
    }

    /// <summary>Field number for the "flights" field.</summary>
    public const int FlightsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Flights.Flight> _repeated_flights_codec
        = pb::FieldCodec.ForMessage(10, global::Flights.Flight.Parser);
    private readonly pbc::RepeatedField<global::Flights.Flight> flights_ = new pbc::RepeatedField<global::Flights.Flight>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Flights.Flight> Flights {
      get { return flights_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchFlightResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchFlightResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!flights_.Equals(other.flights_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= flights_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      flights_.WriteTo(output, _repeated_flights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += flights_.CalculateSize(_repeated_flights_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchFlightResponse other) {
      if (other == null) {
        return;
      }
      flights_.Add(other.flights_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            flights_.AddEntriesFrom(input, _repeated_flights_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
